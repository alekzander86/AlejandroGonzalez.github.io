{"version":3,"sources":["Components/Header.js","Components/Formulario.js","Components/Error.js","Components/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","handleSUbmit","e","preventDefault","datos","ciudad","target","value","pais","_this","consulta","onSubmit","this","name","id","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","temperaturaCelcius","main","weather","temp","parseFloat","Number","toFixed","tempMax","temp_max","tempMin","temp_min","humedad","humidity","descripcion","description","urlIcon","concat","icon","src","alt","style","textAlign","color","background","_this$props$resultado","resultado","App","state","error","datosconsulta","setState","consultarAPi","_this$state$consulta","url","console","log","fetch","then","res","json","catch","prevProps","prevState","_this$state","Components_Header","Components_Formulario","Components_Error","cod","Components_Clima","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83520c1d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper light-blue darken-2\">\r\n                <span className=\"brand-logo\">{props.titulo}</span>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Formulario extends Component {\r\n\r\n\r\n\r\n    handleSUbmit = e =>{\r\n        e.preventDefault();\r\n\r\n        const datos ={\r\n            ciudad : e.target.ciudad.value,\r\n            pais: e.target.pais.value\r\n\r\n        }\r\n\r\n        this.props.consulta(datos);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <form onSubmit={this.handleSUbmit}>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <input name=\"ciudad\" id='ciudad' type=\"text\" />\r\n                                <label htmlFor=\"ciudad\">Ciudad:</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <select name=\"pais\">\r\n                                    <option value=\"\" defaultValue>Elige un país</option>\r\n                                    <option value=\"AR\">Argentina</option>\r\n                                    <option value=\"BR\">Brasil</option>\r\n                                    <option value=\"CO\">Colombia</option>\r\n                                    <option value=\"CR\">CostaRica</option>\r\n                                    <option value=\"ES\">España</option>\r\n                                    <option value=\"US\">Estados Unidos</option>\r\n                                    <option value=\"FR\">Francia</option>\r\n                                    <option value=\"IL\">Israel</option>\r\n                                    <option value=\"MX\">Mexico</option>\r\n                                    <option value=\"NI\">Nicaragua</option>\r\n                                    <option value=\"PE\">Peru</option>\r\n                                    \r\n                                </select>\r\n                                <label htmlFor=\"pais\">Pais:</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2 buscador\">\r\n                                <input type=\"submit\"\r\n                                className=\"waves-effect waves-light btn-large yellow accent-4\"\r\n                                 value=\"Buscar ...\"\r\n                                 />\r\n                            </div>\r\n                        </form>        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6 offset-m3\">\r\n                    <div className=\"card-panel red darken-4 error\">\r\n                        {props.mensaje}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\n\r\nclass Clima extends Component {\r\n\r\n    \r\n    temperaturaCelcius = (main, name, weather) =>{\r\n        const temp = parseFloat(Number(main.temp)-273.15).toFixed(2);\r\n        const tempMax = parseFloat(Number(main.temp_max)-273.15).toFixed(2);\r\n        const tempMin = parseFloat(Number(main.temp_min)-273.15).toFixed(2);\r\n        const humedad = main.humidity;\r\n        const descripcion = weather[0].description; \r\n\r\n        const urlIcon = `http://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n\r\n        return(\r\n                <div className=\"row\">\r\n                    <div className=\"resultado col s12 m8 l6 offset-m2 offset-l3\">\r\n                        <div className=\"card-panel light-blue align-center\">\r\n                            <span className=\"white-text\">\r\n                                <h2>Result of the weather for: {name}</h2>\r\n                                <p className=\"temperatura\">\r\n                                    Current: {temp} &deg;C\r\n                                    <img src={urlIcon} alt=\"imagen de clima\" />\r\n                                </p>\r\n                                <p>Max. {tempMax} &deg;C</p>\r\n                                <p>Min. {tempMin} &deg;C</p>\r\n                                <p>Humidity {humedad} %</p>\r\n                                <p style={{textAlign: 'center', color: '#763c25', background: '#fad02d'}}>Forecast: {descripcion}</p>\r\n                            </span>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n           \r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        const {name, main, weather} = this.props.resultado;\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n               \r\n               {!main ? null : this.temperaturaCelcius(main, name, weather)}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clima;","import React, { Component } from 'react';\nimport Header from './Components/Header';\nimport Formulario from './Components/Formulario';\nimport Error from './Components/Error';\nimport Clima from './Components/Clima';\n\nclass App extends Component {\n\n  state={\n    error: false,\n    consulta: '',\n    resultado: ''\n  }\n\n  datosconsulta = datos =>{\n    if(datos.ciudad === '' || datos.pais === ''){\n       this.setState({error: true});\n    }else{\n      \n      this.setState({error: false, consulta: datos});\n      \n      \n    }\n\n\n  }\n\n  consultarAPi = () =>{\n    const {ciudad, pais} = this.state.consulta;\n    if(!ciudad || !pais ){\n        \n    }else{\n      //query fetch\n      const appid ='c402837c1c9cfa10039bab6f737ecc43';\n      const url= `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appid}`;\n      \n      console.log(url);\n      \n      fetch(url).then(res=>{return res.json();}).then(datos=>{this.setState({resultado: datos})})\n      .catch(error=>{console.log(error)});\n\n      \n    }\n    \n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n      if(prevState.consulta === this.state.consulta){\n\n      }else{\n        this.consultarAPi();\n      }\n   \n  }\n\n  componentDidMount(){\n\n    this.setState({error: false});\n    \n  }\n\n  render() {\n\n    const {error, resultado} = this.state;\n\n    return (\n        <div className=\"App\">\n          <Header titulo=\"React Weather App\"/>\n          <Formulario consulta={this.datosconsulta}/>\n          { error ? <Error mensaje='todos los campos son obligatorios'/> : \n          \n          resultado.cod === '404' ? <Error mensaje='Ciudad No Encontrada'/> : <Clima resultado={resultado}/> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}